@startuml
!include ./style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddCommandParser" as AddCommandParser LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
participant "addCommand:AddCommand" as AddCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "model:Model" as Model MODEL_COLOR
end box

note left of LogicManager
let {str} be "n/Lee Zheng Jing"
end note

[-> LogicManager : execute("add {str}")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("add {str}")
activate AddressBookParser

create AddCommandParser
AddressBookParser -> AddCommandParser
activate AddCommandParser

AddCommandParser --> AddressBookParser
deactivate AddCommandParser

AddressBookParser -> AddCommandParser : parse("{str}")
activate AddCommandParser

AddCommandParser -> ParserUtil : parseName("Lee Zheng Jing")
activate ParserUtil
ParserUtil --> AddCommandParser : name
deactivate ParserUtil

create AddCommand
AddCommandParser -> AddCommand : new AddCommand(person)
activate AddCommand
AddCommand --> AddCommandParser : addCommand
deactivate AddCommand

AddCommandParser --> AddressBookParser : addCommand
deactivate AddCommandParser

AddressBookParser --> LogicManager : addCommand
deactivate AddressBookParser

LogicManager -> AddCommand : execute()
activate AddCommand

AddCommand -> Model : addPerson(person)
activate Model
Model --> AddCommand : person
deactivate Model

'AddCommand -> AddCommand : addPerson(person)

AddCommand -> Model : updateGroups()
activate Model
Model --> AddCommand
deactivate Model

create CommandResult
AddCommand -> CommandResult
activate CommandResult

CommandResult --> AddCommand
deactivate CommandResult

[<--LogicManager
deactivate LogicManager

@enduml
